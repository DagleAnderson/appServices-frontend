webpackJsonp([8],{

/***/ 703:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SolicitacaoServicoPageModule", function() { return SolicitacaoServicoPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(152);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__solicitacao_servico__ = __webpack_require__(728);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};



var SolicitacaoServicoPageModule = /** @class */ (function () {
    function SolicitacaoServicoPageModule() {
    }
    SolicitacaoServicoPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__solicitacao_servico__["a" /* SolicitacaoServicoPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["e" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__solicitacao_servico__["a" /* SolicitacaoServicoPage */]),
            ],
        })
    ], SolicitacaoServicoPageModule);
    return SolicitacaoServicoPageModule;
}());

//# sourceMappingURL=solicitacao-servico.module.js.map

/***/ }),

/***/ 728:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SolicitacaoServicoPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(152);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__ = __webpack_require__(26);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_domain_profissao_service__ = __webpack_require__(354);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_domain_cliente_service__ = __webpack_require__(349);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_storage_service__ = __webpack_require__(45);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__services_domain_categoria_service__ = __webpack_require__(353);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







/**
 * Generated class for the SolicitacaoServicoPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var SolicitacaoServicoPage = /** @class */ (function () {
    function SolicitacaoServicoPage(navCtrl, navParams, formBuider, profissaoService, clienteService, storage, categoriaService, alertCtrl) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.formBuider = formBuider;
        this.profissaoService = profissaoService;
        this.clienteService = clienteService;
        this.storage = storage;
        this.categoriaService = categoriaService;
        this.alertCtrl = alertCtrl;
        this.catSelected = 0;
        this.contador = 1;
        this.index = 0;
        this.localAt = " ";
        this.indexIdade = 0;
        this.mediaIdade = " ";
        this.indexNivel = 0;
        this.nivel = " ";
        this.formGroup = this.formBuider.group({
            categoria: ['', __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required],
            profissao: ['', __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required],
            produtoServico: ['apartamento', [__WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].minLength(5), __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].maxLength(50)]],
            itemSolicitacao1: ['casa má dividida, com pintura desbotada e parede com danos graves', [__WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].minLength(10), __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].maxLength(255)]],
            itemSolicitacao2: [this.contador, [__WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required]],
            itemSolicitacao3: ['imagens com tamanho da area do local', [__WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].minLength(10), __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].maxLength(255)]],
            itemSolicitacao4: ["", [__WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required]],
            itemSolicitacao5: ['15 dias', [__WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].minLength(5), __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].maxLength(25)]],
            itemSolicitacao6: ['pintura completa do local com detalhes em algumas par', [__WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].minLength(10), __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].maxLength(255)]],
            itemSolicitacao7: ['ITEM EXTRA', [__WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].required, __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].minLength(10), __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["f" /* Validators */].maxLength(255)]]
        });
    }
    SolicitacaoServicoPage.prototype.ionViewDidLoad = function () {
        this.showCategorias();
    };
    SolicitacaoServicoPage.prototype.showCategorias = function () {
        var _this = this;
        this.categoriaService.findAll()
            .subscribe(function (response) {
            _this.categorias = response;
            _this.formGroup.controls.categoria.setValue(_this.categorias[0].id);
            _this.updateProfissoes();
        }, function (erro) { });
    };
    SolicitacaoServicoPage.prototype.updateProfissoes = function () {
        var _this = this;
        var categoria_id = this.formGroup.value.categoria;
        this.profissaoService.findByCategoria(categoria_id)
            .subscribe(function (response) {
            _this.profissoes = response['content'];
            _this.formGroup.controls.profissao.setValue(null);
        }, function (erro) { });
    };
    SolicitacaoServicoPage.prototype.showConfirmation = function () {
        this.catSelected = this.formGroup.value.categoria;
        this.verifyCategoria(this.catSelected);
        this.solicitacao = this.formGroup.value;
        var profissao_id = this.formGroup.value.profissao;
        this.navCtrl.push('ConfirmationSolicitacaoPage', {
            solicitacao: this.solicitacao, profissao_id: profissao_id, catSelected: this.catSelected
        });
    };
    SolicitacaoServicoPage.prototype.verifyCategoria = function (catSelected) {
        this.formGroup.value.itemSolicitacao2 = this.contador;
        this.formGroup.value.itemSolicitacao4 = this.local(this.index);
        if (catSelected == 4) {
            this.formGroup.value.itemSolicitacao3 = this.mediaDeIdade(this.indexIdade);
        }
        if (catSelected == 5) {
            this.formGroup.value.itemSolicitacao3 = this.mediaDeIdade(this.indexIdade);
            this.formGroup.value.itemSolicitacao5 = this.nivelSelect(this.indexNivel);
        }
    };
    SolicitacaoServicoPage.prototype.increment = function () { this.contador = this.contador + 1; };
    SolicitacaoServicoPage.prototype.decrement = function () {
        if (this.contador <= 1) {
        }
        else {
            this.contador = this.contador - 1;
        }
    };
    SolicitacaoServicoPage.prototype.local = function (index) {
        switch (index) {
            case 1:
                return this.localAt = "Dentro da cidade";
            case 2:
                return this.localAt = "Fora da cidade";
            case 3:
                ;
                return this.localAt = "Minha residência";
            case 4:
                return this.localAt = "Minha empresa";
            case 5:
                return this.localAt = "Consigo levar até você";
            case 6:
                return this.localAt = "Posso ir até você";
            default:
                return this.localAt = " ";
                break;
        }
    };
    SolicitacaoServicoPage.prototype.mediaDeIdade = function (indexIdade) {
        switch (indexIdade) {
            case 1:
                return this.mediaIdade = "Entre 4 e 8 anos";
            case 2:
                return this.mediaIdade = "Entre 8 e 12 anos";
            case 3:
                ;
                return this.mediaIdade = "Entre 12 e 16 anos";
            case 4:
                return this.mediaIdade = "Acima de 16 anos";
            default:
                return this.mediaIdade = " ";
                break;
        }
    };
    SolicitacaoServicoPage.prototype.nivelSelect = function (indexNivel) {
        switch (indexNivel) {
            case 1:
                return this.nivel = "Básico";
            case 2:
                return this.nivel = "Intermediário";
            case 3:
                ;
                return this.nivel = "Avançado";
            default:
                return this.nivel = " ";
                break;
        }
    };
    SolicitacaoServicoPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-solicitacao-servico',template:/*ion-inline-start:"C:\Users\dagle\OneDrive\Documentos\IGTI\TCC\front-end AppServices\appServices\src\pages\solicitacao-servico\solicitacao-servico.html"*/'\n<ion-header>\n  <ion-navbar>\n        <button  ion-button menuToggle>\n                <ion-icon name="menu"></ion-icon>\n        </button> \n    <ion-title>solicitação de Serviço</ion-title>\n  </ion-navbar>\n</ion-header>\n\n<ion-content padding>\n   <form  [formGroup]="formGroup">\n    <ion-item>\n        <ion-label stacked>Selecione uma categoria*</ion-label>\n            <ion-select [(ngModel)]="catSelected" formControlName="categoria"  (ionChange)="updateProfissoes()">\n                <ion-option *ngFor="let categoria of categorias;first as f" \n                 [value]="categoria.id" >{{categoria.nome}}</ion-option>\n            </ion-select>\n    </ion-item> \n    <ion-item>\n          <ion-label stacked>Selecione um profissional*</ion-label>\n          <ion-select formControlName="profissao" >\n              <ion-option *ngFor="let profissao of profissoes;first as f"\n                [value]="profissao.id"  \n                >{{profissao.nome}}</ion-option>\n          </ion-select>\n      </ion-item>\n        <div *ngIf="catSelected==1" >\n            <ion-item>\n                <ion-label  stacked class="area-text">\n                     De qual tipo de estrutura ou serviço estamos tratando? (ex:prédio, reforma de Igreja, consultoria, projeto)*\n                </ion-label>\n                    <ion-input formControlName="produtoServico" type="text"></ion-input>\n            </ion-item>\n            <ion-item>\n                <ion-label stacked class="area-text">\n                    Descreva em detalhes o defeitos, circunstâncias do local ou serviço: (ex:casa má dividida, com pintura desbotada...)*\n                </ion-label>\n                    <ion-textarea formControlName="itemSolicitacao1" type="text"></ion-textarea>\n            </ion-item>\n                <p class="danger" *ngIf="formGroup.controls.itemSolicitacao1.dirty && formGroup.controls.itemSolicitacao1.errors" margin-left style="color:red;font-size: 12px">Valor inválido( minimo 10 e máximo 255 caracteres)</p>  \n                <ion-item>   \n                        <ion-label stacked >\n                            Quantidade de comodos:* <br/>\n                                <ion-icon color="primary"  class="decrement"  name="remove-circle" (click)="decrement()"></ion-icon>\n                                            <strong  style="font-size: 25px;font-weight: 300">{{contador}}</strong>   \n                                <ion-icon color="primary" class="increment" name="add-circle" (click)="increment()"></ion-icon>\n                        </ion-label>\n                </ion-item>\n                <p class="danger" *ngIf="formGroup.controls.itemSolicitacao2.dirty && formGroup.controls.itemSolicitacao2.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 1)</p>\n                <ion-item>   \n                <ion-label stacked>\n                   Imagens:*\n                </ion-label>\n                    <ion-textarea formControlName="itemSolicitacao3" type="text"></ion-textarea>\n             </ion-item>\n                <p class="danger" *ngIf="formGroup.controls.itemSolicitacao3.dirty && formGroup.controls.itemSolicitacao3.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p> \n             <ion-item>   \n                <ion-label stacked>Local:*</ion-label>\n                        <ion-select  formControlName="itemSolicitacao4" [(ngModel)]="index" >\n                           <ion-option [value]=1  >Dentro da cidade</ion-option>\n                           <ion-option [value]=2 >Fora da cidade</ion-option>\n                    </ion-select>\n             </ion-item>\n                <ion-item>   \n                        <ion-label stacked class="area-text">\n                            Prazo de entrega.*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao5" type="text"></ion-textarea>\n                </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao5.dirty && formGroup.controls.itemSolicitacao5.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>  \n                <ion-item>   \n                <ion-label stacked class="area-text">\n                    Descreva detalhes do que deseja que este profissional realize.*\n                </ion-label>\n                    <ion-textarea formControlName="itemSolicitacao6" type="text"></ion-textarea>\n             </ion-item>\n                <p class="danger" *ngIf="formGroup.controls.itemSolicitacao6.dirty && formGroup.controls.itemSolicitacao6.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>        \n        \n             \n            </div>\n        <div *ngIf="catSelected==2">\n               <ion-item>\n                <ion-label  stacked class="area-text">\n                        De qual tipo produto ou serviço estamos tratando?(ex:computador,celular,tablet, notebook)*\n                </ion-label>\n                    <ion-input formControlName="produtoServico" type="text"></ion-input>\n            </ion-item>\n            <ion-item>\n                <ion-label stacked class="area-text">\n                        Descreva em detalhes produto, os defeitos, circunstâncias do produto ou serviço:(ex: computador DELL com lentidão, falhas de sistema...)*\n                </ion-label>\n                    <ion-textarea formControlName="itemSolicitacao1" type="text"></ion-textarea>\n            </ion-item>\n                <p class="danger" *ngIf="formGroup.controls.itemSolicitacao1.dirty && formGroup.controls.itemSolicitacao1.errors" margin-left style="color:red;font-size: 12px">Valor inválido( minimo 10 e máximo 255 caracteres)</p>  \n                <ion-item>   \n                    <ion-label stacked>\n                        Quantidade de aparelhos:* <br/>\n                            <ion-icon color="primary"  class="decrement"  name="remove-circle" (click)="decrement()"></ion-icon>\n                            <strong style="font-size: 25px;font-weight: 300">{{contador}}</strong>  \n                            <ion-icon color="primary" class="increment" name="add-circle" (click)="increment()"></ion-icon>\n                    </ion-label>\n                </ion-item>\n                <p class="danger" *ngIf="formGroup.controls.itemSolicitacao2.dirty && formGroup.controls.itemSolicitacao2.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 1)</p>\n            <ion-item>   \n                    <ion-label stacked>Ano do aparalho:* <br/>\n                        <ion-select  formControlName="itemSolicitacao3">\n                                <ion-option [value]="2019">2019</ion-option>\n                        </ion-select>\n                    </ion-label>\n                </ion-item>\n                    <p class="danger" *ngIf="formGroup.controls.itemSolicitacao3.dirty && formGroup.controls.itemSolicitacao3.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>  \n            \n                    <ion-item>   \n                            <ion-label stacked>Local:*</ion-label>\n                                    <ion-select  formControlName="itemSolicitacao4" [(ngModel)]="index">\n                                       <ion-option [value]=3 >Minha residência</ion-option>\n                                       <ion-option [value]=4 >Minha empresa</ion-option>\n                                       <ion-option [value]=5 >Consigo levar até você</ion-option>\n                                </ion-select>\n                    </ion-item>\n\n                <ion-item>   \n                <ion-label stacked>\n                   Imagens:*\n                </ion-label>\n                    <ion-textarea formControlName="itemSolicitacao5" type="text"></ion-textarea>\n                 </ion-item>\n                <p class="danger" *ngIf="formGroup.controls.itemSolicitacao5.dirty && formGroup.controls.itemSolicitacao5.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p> \n                <ion-item>   \n                        <ion-label stacked class="area-text">\n                            Descreva detalhes do que deseja que este profissional realize.*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao6" type="text"></ion-textarea>\n                </ion-item>\n                <p class="danger" *ngIf="formGroup.controls.itemSolicitacao6.dirty && formGroup.controls.itemSolicitacao6.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>\n              \n               \n        </div>\n         <div *ngIf="catSelected==3">\n                <ion-item>\n                        <ion-label  stacked class="area-text">\n                                De qual tipo de veículo ou serviço estamos tratando? (ex:troca de óleo, carro,moto, revisão geral)*\n                        </ion-label>\n                            <ion-input formControlName="produtoServico" type="text"></ion-input>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label stacked class="area-text">\n                                Descreva em detalhes os defeitos ou circunstâncias do veículo (ex:saindo muita fumaça do carburador, um barulho estranho no motor...)*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao1" type="text"></ion-textarea>\n                    </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao1.dirty && formGroup.controls.itemSolicitacao1.errors" margin-left style="color:red;font-size: 12px">Valor inválido( minimo 10 e máximo 255 caracteres)</p>  \n                        <ion-item>   \n                            <ion-label stacked>\n                                    Quantidade de veículos:* <br/>\n                                    <ion-icon color="primary" class="decrement"  name="remove-circle" (click)="decrement()"></ion-icon>\n                                    <strong style="font-size: 25px;font-weight: 300">{{contador}}</strong>   \n                                    <ion-icon color="primary" class="increment" name="add-circle" (click)="increment()"></ion-icon>\n                            </ion-label>\n                        </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao2.dirty && formGroup.controls.itemSolicitacao2.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>  \n                    <ion-item>   \n                            <ion-label stacked>Ano do veículo:* <br/>\n                                <ion-select  formControlName="itemSolicitacao3">\n                                        <ion-option [value]="2019">2019</ion-option>\n                                </ion-select>\n                            </ion-label>\n                        </ion-item>\n                            <p class="danger" *ngIf="formGroup.controls.itemSolicitacao3.dirty && formGroup.controls.itemSolicitacao3.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>  \n                            <ion-item>   \n                                    <ion-label stacked>Local do atendimento:*</ion-label>\n                                            <ion-select  formControlName="itemSolicitacao4" [(ngModel)]="index">\n                                               <ion-option [value]=3>Minha residência</ion-option>\n                                               <ion-option [value]=5>Consigo levar até você</ion-option>\n                                            </ion-select>\n                                 </ion-item>\n                                 <p class="danger" *ngIf="formGroup.controls.itemSolicitacao5.dirty && formGroup.controls.itemSolicitacao5.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>\n                        <ion-item>   \n                        <ion-label stacked>\n                           Imagens:*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao5" type="text"></ion-textarea>\n                     </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao5.dirty && formGroup.controls.itemSolicitacao5.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p> \n                    \n                     <ion-item>   \n                        <ion-label stacked class="area-text">\n                            Descreva detalhes do que deseja que este<br/> profissional realize.*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao6" type="text"></ion-textarea>\n                     </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao6.dirty && formGroup.controls.itemSolicitacao6.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>        \n         \n        </div>\n        <div *ngIf="catSelected==4">\n                <ion-item>\n                        <ion-label  stacked class="area-text">\n                            De qual tipo serviço estamos tratando?(ex:valor de consulta,avaliação física, personal trainer particular)*\n                        </ion-label>\n                            <ion-input formControlName="produtoServico" type="text"></ion-input>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label stacked class="area-text">\n                                Descreva em detalhes causas ou sintomas que o levou a essa solicitação de serviço: (ex:dores musculares, indicação médica,obesidade ou hipertrofia)*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao1" type="text"></ion-textarea>\n                    </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao1.dirty && formGroup.controls.itemSolicitacao1.errors" margin-left style="color:red;font-size: 12px">Valor inválido( minimo 10 e máximo 255 caracteres)</p>  \n                        <ion-item>   \n                            <ion-label stacked>\n                                    Quantidade de pessoas:* <br/>\n                                    <ion-icon color="primary" class="decrement"  name="remove-circle" (click)="decrement()"></ion-icon>\n                                    <strong style="font-size: 25px;font-weight: 300">{{contador}}</strong>   \n                                    <ion-icon color="primary" class="increment" name="add-circle" (click)="increment()"></ion-icon>\n                            </ion-label>\n                        </ion-item>\n                    <ion-item>   \n                            <ion-label stacked>Média de idade:* <br/>\n                                <ion-select  formControlName="itemSolicitacao3" [(ngModel)]="indexIdade" >\n                                        <ion-option [value]=1>Entre 4 e 8 anos</ion-option>\n                                        <ion-option [value]=2>Entre 8 e 12 anos</ion-option>\n                                        <ion-option [value]=3>Entre 12 e 16 anos</ion-option>\n                                        <ion-option [value]=4>acima de 16 anos </ion-option>\n                                </ion-select>\n                            </ion-label>\n                        </ion-item>  \n                        <ion-item>   \n                                <ion-label stacked>Local de atendimento:*</ion-label>\n                                        <ion-select  formControlName="itemSolicitacao4" [(ngModel)]="index">\n                                           <ion-option [value]=3>Minha residência</ion-option>\n                                           <ion-option [value]=6>posso ir até você</ion-option>\n                                        </ion-select>\n                             </ion-item>  \n                        <ion-item>   \n                        <ion-label stacked>\n                           Imagens:*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao5" type="text"></ion-textarea>\n                     </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao5.dirty && formGroup.controls.itemSolicitacao5.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p> \n                    \n                      <ion-item>   \n                        <ion-label stacked class="area-text">\n                            Descreva detalhes do que deseja que este<br/> profissional realize.*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao6" type="text"></ion-textarea>\n                     </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao6.dirty && formGroup.controls.itemSolicitacao6.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>        \n                     \n        </div>\n        <div *ngIf="catSelected==5">\n                <ion-item>\n                        <ion-label  stacked class="area-text">\n                            De qual tipo serviço estamos tratando?(ex:aulas de reforço, dança , palestras)*\n                        </ion-label>\n                            <ion-input formControlName="produtoServico" type="text"></ion-input>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label stacked class="area-text">\n                            Descreva em detalhes as circunstâncias que o levou a essa solicitação serviço: (ex: buscar mais conhecimento, melhorar em matemática, aprender uma nova língua)*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao1" type="text"></ion-textarea>\n                    </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao1.dirty && formGroup.controls.itemSolicitacao1.errors" margin-left style="color:red;font-size: 12px">Valor inválido( minimo 10 e máximo 255 caracteres)</p>  \n                        <ion-item>   \n                            <ion-label stacked>\n                                    Quantidade de pessoas:* <br/>\n                                    <ion-icon color="primary" class="decrement"  name="remove-circle" (click)="decrement()"></ion-icon>\n                                    <strong style="font-size: 25px;font-weight: 300">{{contador}}</strong>   \n                                    <ion-icon color="primary" class="increment" name="add-circle" (click)="increment()"></ion-icon>\n                            </ion-label>\n                        </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao2.dirty && formGroup.controls.itemSolicitacao2.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p> \n                    <ion-item>   \n                            <ion-label stacked>Média de idade:* <br/>\n                                <ion-select  formControlName="itemSolicitacao3"  [(ngModel)]="indexIdade">\n                                        <ion-option [value]=1>Entre 4 e 8 anos</ion-option>\n                                        <ion-option [value]=2>Entre 8 e 12 anos</ion-option>\n                                        <ion-option [value]=3>Entre 12 e 15 anos</ion-option>\n                                        <ion-option [value]=4>de 15 anos acima</ion-option>\n                                </ion-select>\n                            </ion-label>\n                        </ion-item>\n                            <p class="danger" *ngIf="formGroup.controls.itemSolicitacao3.dirty && formGroup.controls.itemSolicitacao3.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>  \n                        <ion-item>   \n                                <ion-label stacked>Nível de conhecimento:* <br/>\n                                    <ion-select  formControlName="itemSolicitacao5"  [(ngModel)]="indexNivel">\n                                        <ion-option [value]=1>Básico</ion-option>\n                                         <ion-option [value]=2>Intermediário</ion-option>\n                                        <ion-option [value]=3>Avançado</ion-option>\n                                    </ion-select>\n                                </ion-label>\n                         </ion-item>\n                            <p class="danger" *ngIf="formGroup.controls.itemSolicitacao4.dirty && formGroup.controls.itemSolicitacao4.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>  \n                            <ion-item>   \n                                    <ion-label stacked>Local de atendimento:*</ion-label>\n                                            <ion-select  formControlName="itemSolicitacao4" [(ngModel)]="index">\n                                               <ion-option [value]=3>Minha residência</ion-option>\n                                               <ion-option [value]=5>Posso ir até você</ion-option>\n                                            </ion-select>\n                                 </ion-item>\n                                    <p class="danger" *ngIf="formGroup.controls.itemSolicitacao4.dirty && formGroup.controls.itemSolicitacao4.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>\n                                       \n                        <ion-item>   \n                        <ion-label stacked>\n                           Imagens:*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao6" type="text"></ion-textarea>\n                     </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao6.dirty && formGroup.controls.itemSolicitacao6.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p> \n                        <ion-item>   \n                        <ion-label stacked class="area-text">\n                            Descreva detalhes do que deseja que este<br/> profissional realize.*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao7" type="text"></ion-textarea>\n                     </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao7.dirty && formGroup.controls.itemSolicitacao7.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>        \n\n        </div>\n         <div *ngIf="catSelected==6">\n                <ion-item>\n                        <ion-label  stacked class="area-text">\n                                De qual tipo serviço estamos tratando?(reforma  do sofá, encanação , guarda-roupa)*\n                        </ion-label>\n                            <ion-input formControlName="produtoServico" type="text"></ion-input>\n                    </ion-item>\n                    <ion-item>\n                        <ion-label stacked class="area-text">\n                                Descreva em detalhes os defeitos, circunstâncias do produto ou serviço: (ex: montar novo guarda-roupas...)*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao1" type="text"></ion-textarea>\n                    </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao1.dirty && formGroup.controls.itemSolicitacao1.errors" margin-left style="color:red;font-size: 12px">Valor inválido( minimo 10 e máximo 255 caracteres)</p>  \n                    <ion-item>   \n                            <ion-label stacked>\n                                    Quantidade de itens para serviço:* <br/>\n                                    <ion-icon color="primary" class="decrement"  name="remove-circle" (click)="decrement()"></ion-icon>\n                                    <strong style="font-size: 25px;font-weight: 300">{{contador}}</strong>    \n                                    <ion-icon color="primary" class="increment" name="add-circle" (click)="increment()"></ion-icon>\n                            </ion-label>\n                        </ion-item>\n                          <!--  <p class="danger" *ngIf="formGroup.controls.itemSolicitacao2.dirty && formGroup.controls.itemSolicitacao2.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p> -->  \n                    <ion-item>   \n                            <ion-label stacked>tempo de uso:* <br/>\n                                <ion-select  formControlName="itemSolicitacao3"   [(ngModel)]="indexAnos" >\n                                        <ion-option [value]=1>Entre 0 e 2 anos</ion-option>\n                                        <ion-option [value]=2>Entre 2 e 5 anos</ion-option>\n                                        <ion-option [value]=3>Entre 5 e 10 anos</ion-option>\n                                        <ion-option [value]=4>de 10 anos acima</ion-option>\n                                </ion-select>\n                            </ion-label>\n                    </ion-item>\n                            <p class="danger" *ngIf="formGroup.controls.itemSolicitacao3.dirty && formGroup.controls.itemSolicitacao3.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>  \n                        <ion-item>\n                            \n                        <ion-item>   \n                                <ion-label stacked>Local:*</ion-label>\n                                    <ion-select  formControlName="itemSolicitacao4" [(ngModel)]="index">\n                                        <ion-option [value]=3>Minha residência</ion-option>\n                                        <ion-option [value]=6>posso levar até você</ion-option>\n                                    </ion-select>\n                        </ion-item>\n                        <ion-item>\n                                <p class="danger" *ngIf="formGroup.controls.itemSolicitacao4.dirty && formGroup.controls.itemSolicitacao4.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>  \n                              \n                            <ion-label stacked>\n                                Imagens:*\n                            </ion-label>\n                        </ion-item>\n                        <ion-textarea formControlName="itemSolicitacao5" type="text"></ion-textarea>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao5.dirty && formGroup.controls.itemSolicitacao5.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p> \n                      <ion-item>   \n                        <ion-label stacked class="area-text">\n                            Descreva detalhes do que deseja que este<br/> profissional realize.*\n                        </ion-label>\n                            <ion-textarea formControlName="itemSolicitacao6" type="text"></ion-textarea>\n                     </ion-item>\n                        <p class="danger" *ngIf="formGroup.controls.itemSolicitacao6.dirty && formGroup.controls.itemSolicitacao6.errors" margin-left style="color:red;font-size: 12px">Valor inválido(minimo 10 e máximo 255 caracteres)</p>        \n\n         </div>\n         \n    </form> \n    <br/>\n   <button ion-button block type="submit" [disabled]="formGroup.invalid" (click)="showConfirmation()">próximo</button>\n</ion-content>\n'/*ion-inline-end:"C:\Users\dagle\OneDrive\Documentos\IGTI\TCC\front-end AppServices\appServices\src\pages\solicitacao-servico\solicitacao-servico.html"*/,
        }),
        __metadata("design:paramtypes", [typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["g" /* NavController */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["g" /* NavController */]) === "function" && _a || Object, typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavParams */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["h" /* NavParams */]) === "function" && _b || Object, typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["a" /* FormBuilder */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_2__node_modules_angular_forms__["a" /* FormBuilder */]) === "function" && _c || Object, typeof (_d = typeof __WEBPACK_IMPORTED_MODULE_3__services_domain_profissao_service__["a" /* ProfissaoService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_3__services_domain_profissao_service__["a" /* ProfissaoService */]) === "function" && _d || Object, typeof (_e = typeof __WEBPACK_IMPORTED_MODULE_4__services_domain_cliente_service__["a" /* ClienteService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_4__services_domain_cliente_service__["a" /* ClienteService */]) === "function" && _e || Object, typeof (_f = typeof __WEBPACK_IMPORTED_MODULE_5__services_storage_service__["a" /* StorageService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_5__services_storage_service__["a" /* StorageService */]) === "function" && _f || Object, typeof (_g = typeof __WEBPACK_IMPORTED_MODULE_6__services_domain_categoria_service__["a" /* CategoriaService */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_6__services_domain_categoria_service__["a" /* CategoriaService */]) === "function" && _g || Object, typeof (_h = typeof __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */] !== "undefined" && __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["a" /* AlertController */]) === "function" && _h || Object])
    ], SolicitacaoServicoPage);
    return SolicitacaoServicoPage;
    var _a, _b, _c, _d, _e, _f, _g, _h;
}());

//# sourceMappingURL=solicitacao-servico.js.map

/***/ })

});
//# sourceMappingURL=8.js.map